{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\nimport { check } from '../http/userAPI';\nexport default class UserStore {\n  constructor() {\n    this._isAuth = false;\n    this._user = {};\n    this._isLoading = true; // Добавляем состояние загрузки\n    makeAutoObservable(this);\n    this.checkAuth(); // Автоматическая проверка при создании хранилища\n  }\n  setIsAuth(bool) {\n    this._isAuth = bool;\n  }\n  setUser(user) {\n    this._user = user;\n  }\n  setIsLoading(bool) {\n    this._isLoading = bool;\n  }\n  async checkAuth() {\n    this.setIsLoading(true);\n    try {\n      const userData = await check();\n      if (userData) {\n        this.setUser(userData);\n        this.setIsAuth(true);\n      } else {\n        this.setIsAuth(false);\n      }\n    } catch (e) {\n      this.setIsAuth(false);\n    } finally {\n      this.setIsLoading(false);\n    }\n  }\n  get isAuth() {\n    return this._isAuth;\n  }\n  get user() {\n    return this._user;\n  }\n  get isLoading() {\n    return this._isLoading;\n  }\n}","map":{"version":3,"names":["makeAutoObservable","check","UserStore","constructor","_isAuth","_user","_isLoading","checkAuth","setIsAuth","bool","setUser","user","setIsLoading","userData","e","isAuth","isLoading"],"sources":["C:/ShareLib/Курсач/online-store-bit-tech/client/src/store/UserStore.js"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\r\nimport { check } from '../http/userAPI';\r\n\r\nexport default class UserStore {\r\n    constructor() {\r\n        this._isAuth = false;\r\n        this._user = {};\r\n        this._isLoading = true; // Добавляем состояние загрузки\r\n        makeAutoObservable(this);\r\n        this.checkAuth(); // Автоматическая проверка при создании хранилища\r\n    }\r\n\r\n    setIsAuth(bool) {\r\n        this._isAuth = bool;\r\n    }\r\n     \r\n    setUser(user) {\r\n        this._user = user;\r\n    }\r\n\r\n    setIsLoading(bool) {\r\n        this._isLoading = bool;\r\n    }\r\n\r\n    async checkAuth() {\r\n        this.setIsLoading(true);\r\n        try {\r\n            const userData = await check();\r\n            if (userData) {\r\n                this.setUser(userData);\r\n                this.setIsAuth(true);\r\n            } else {\r\n                this.setIsAuth(false);\r\n            }\r\n        } catch (e) {\r\n            this.setIsAuth(false);\r\n        } finally {\r\n            this.setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    get isAuth() {\r\n        return this._isAuth;\r\n    }\r\n\r\n    get user() {\r\n        return this._user;\r\n    }\r\n\r\n    get isLoading() {\r\n        return this._isLoading;\r\n    }\r\n}"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,MAAM;AACzC,SAASC,KAAK,QAAQ,iBAAiB;AAEvC,eAAe,MAAMC,SAAS,CAAC;EAC3BC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;IACf,IAAI,CAACC,UAAU,GAAG,IAAI,CAAC,CAAC;IACxBN,kBAAkB,CAAC,IAAI,CAAC;IACxB,IAAI,CAACO,SAAS,CAAC,CAAC,CAAC,CAAC;EACtB;EAEAC,SAASA,CAACC,IAAI,EAAE;IACZ,IAAI,CAACL,OAAO,GAAGK,IAAI;EACvB;EAEAC,OAAOA,CAACC,IAAI,EAAE;IACV,IAAI,CAACN,KAAK,GAAGM,IAAI;EACrB;EAEAC,YAAYA,CAACH,IAAI,EAAE;IACf,IAAI,CAACH,UAAU,GAAGG,IAAI;EAC1B;EAEA,MAAMF,SAASA,CAAA,EAAG;IACd,IAAI,CAACK,YAAY,CAAC,IAAI,CAAC;IACvB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAAC,CAAC;MAC9B,IAAIY,QAAQ,EAAE;QACV,IAAI,CAACH,OAAO,CAACG,QAAQ,CAAC;QACtB,IAAI,CAACL,SAAS,CAAC,IAAI,CAAC;MACxB,CAAC,MAAM;QACH,IAAI,CAACA,SAAS,CAAC,KAAK,CAAC;MACzB;IACJ,CAAC,CAAC,OAAOM,CAAC,EAAE;MACR,IAAI,CAACN,SAAS,CAAC,KAAK,CAAC;IACzB,CAAC,SAAS;MACN,IAAI,CAACI,YAAY,CAAC,KAAK,CAAC;IAC5B;EACJ;EAEA,IAAIG,MAAMA,CAAA,EAAG;IACT,OAAO,IAAI,CAACX,OAAO;EACvB;EAEA,IAAIO,IAAIA,CAAA,EAAG;IACP,OAAO,IAAI,CAACN,KAAK;EACrB;EAEA,IAAIW,SAASA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACV,UAAU;EAC1B;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}