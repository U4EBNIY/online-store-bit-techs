{"ast":null,"code":"import { $authHost } from './index';\nexport const createOrder = async () => {\n  try {\n    const {\n      data\n    } = await $authHost.post('api/order');\n    return data;\n  } catch (e) {\n    console.error('Ошибка при создании заказа:', e);\n    throw new Error('Не удалось оформить заказ');\n  }\n};\nexport const fetchOrders = async () => {\n  try {\n    const {\n      data\n    } = await $authHost.get('api/order');\n    return data;\n  } catch (e) {\n    console.error('Ошибка при получении заказов:', e);\n    throw new Error('Не удалось получить список заказов');\n  }\n};","map":{"version":3,"names":["$authHost","createOrder","data","post","e","console","error","Error","fetchOrders","get"],"sources":["C:/ShareLib/Курсач/online-store-bit-tech/client/src/http/orderAPI.js"],"sourcesContent":["import { $authHost } from './index';\r\n\r\nexport const createOrder = async () => {\r\n    try {\r\n        const { data } = await $authHost.post('api/order');\r\n        return data;\r\n    } catch (e) {\r\n        console.error('Ошибка при создании заказа:', e);\r\n        throw new Error('Не удалось оформить заказ');\r\n    }\r\n};\r\n\r\nexport const fetchOrders = async () => {\r\n    try {\r\n        const { data } = await $authHost.get('api/order');\r\n        return data;\r\n    } catch (e) {\r\n        console.error('Ошибка при получении заказов:', e);\r\n        throw new Error('Не удалось получить список заказов');\r\n    }\r\n};\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,SAAS;AAEnC,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMF,SAAS,CAACG,IAAI,CAAC,WAAW,CAAC;IAClD,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,CAAC,EAAE;IACRC,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEF,CAAC,CAAC;IAC/C,MAAM,IAAIG,KAAK,CAAC,2BAA2B,CAAC;EAChD;AACJ,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACA,MAAM;MAAEN;IAAK,CAAC,GAAG,MAAMF,SAAS,CAACS,GAAG,CAAC,WAAW,CAAC;IACjD,OAAOP,IAAI;EACf,CAAC,CAAC,OAAOE,CAAC,EAAE;IACRC,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEF,CAAC,CAAC;IACjD,MAAM,IAAIG,KAAK,CAAC,oCAAoC,CAAC;EACzD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}