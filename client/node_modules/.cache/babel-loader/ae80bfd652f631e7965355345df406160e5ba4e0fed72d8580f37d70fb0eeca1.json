{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nclass DeviceStore {\n  constructor() {\n    this._types = [];\n    this._brands = [];\n    this._devices = [];\n    this._selectedType = {};\n    this._selectedBrand = {};\n    this._page = 1;\n    this._totalCount = 0;\n    this._limit = 3;\n    this._searchTerm = ''; // Add searchTerm state\n    makeAutoObservable(this);\n  }\n  setTypes(types) {\n    this._types = types;\n  }\n  setBrands(brands) {\n    this._brands = brands;\n  }\n  setDevices(devices) {\n    this._devices = devices;\n  }\n  setSelectedType(type) {\n    this.setPage(1);\n    this._selectedType = type;\n  }\n  setSelectedBrand(brand) {\n    this.setPage(1);\n    this._selectedBrand = brand;\n  }\n  setPage(page) {\n    this._page = page;\n  }\n  setTotalCount(count) {\n    this._totalCount = count;\n  }\n  setSearchTerm(term) {\n    // Add setSearchTerm action\n    this._searchTerm = term;\n    this.setPage(1); // Reset page when search term changes\n  }\n  resetFilters() {\n    this._selectedType = {};\n    this._selectedBrand = {};\n    this._page = 1;\n    this._searchTerm = '';\n  }\n  get types() {\n    return this._types;\n  }\n  get brands() {\n    return this._brands;\n  }\n  get devices() {\n    let filteredDevices = this._devices;\n    if (this._selectedType.id) {\n      filteredDevices = filteredDevices.filter(device => device.typeId === this._selectedType.id);\n    }\n    if (this._selectedBrand.id) {\n      filteredDevices = filteredDevices.filter(device => device.brandId === this._selectedBrand.id);\n    }\n    if (this._searchTerm) {\n      filteredDevices = filteredDevices.filter(device => device.name.toLowerCase().includes(this._searchTerm.toLowerCase()));\n    }\n    return filteredDevices;\n  }\n  get selectedType() {\n    return this._selectedType;\n  }\n  get selectedBrand() {\n    return this._selectedBrand;\n  }\n  get page() {\n    return this._page;\n  }\n  get totalCount() {\n    return this._totalCount;\n  }\n  get limit() {\n    return this._limit;\n  }\n  get searchTerm() {\n    return this._searchTerm;\n  }\n}\nexport default DeviceStore;","map":{"version":3,"names":["makeAutoObservable","DeviceStore","constructor","_types","_brands","_devices","_selectedType","_selectedBrand","_page","_totalCount","_limit","_searchTerm","setTypes","types","setBrands","brands","setDevices","devices","setSelectedType","type","setPage","setSelectedBrand","brand","page","setTotalCount","count","setSearchTerm","term","resetFilters","filteredDevices","id","filter","device","typeId","brandId","name","toLowerCase","includes","selectedType","selectedBrand","totalCount","limit","searchTerm"],"sources":["C:/ShareLib/Курсач/online-store-bit-tech/client/src/store/DeviceStore.js"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\n\r\nclass DeviceStore {\r\n    constructor() {\r\n        this._types = [];\r\n        this._brands = [];\r\n        this._devices = [];\r\n        this._selectedType = {};\r\n        this._selectedBrand = {};\r\n        this._page = 1;\r\n        this._totalCount = 0;\r\n        this._limit = 3;\r\n        this._searchTerm = ''; // Add searchTerm state\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setTypes(types) {\r\n        this._types = types;\r\n    }\r\n    setBrands(brands) {\r\n        this._brands = brands;\r\n    }\r\n    setDevices(devices) {\r\n        this._devices = devices;\r\n    }\r\n\r\n    setSelectedType(type) {\r\n        this.setPage(1)\r\n        this._selectedType = type\r\n    }\r\n    setSelectedBrand(brand) {\r\n        this.setPage(1)\r\n        this._selectedBrand = brand\r\n    }\r\n\r\n    setPage(page) {\r\n        this._page = page\r\n    }\r\n    setTotalCount(count) {\r\n        this._totalCount = count\r\n    }\r\n\r\n    setSearchTerm(term) {  // Add setSearchTerm action\r\n        this._searchTerm = term;\r\n        this.setPage(1); // Reset page when search term changes\r\n    }\r\n\r\n    resetFilters() {\r\n        this._selectedType = {};\r\n        this._selectedBrand = {};\r\n        this._page = 1;\r\n        this._searchTerm = '';\r\n    }\r\n\r\n    get types() {\r\n        return this._types;\r\n    }\r\n    get brands() {\r\n        return this._brands;\r\n    }\r\n    get devices() {\r\n        let filteredDevices = this._devices;\r\n\r\n        if (this._selectedType.id) {\r\n            filteredDevices = filteredDevices.filter(device => device.typeId === this._selectedType.id)\r\n        }\r\n        if (this._selectedBrand.id) {\r\n            filteredDevices = filteredDevices.filter(device => device.brandId === this._selectedBrand.id)\r\n        }\r\n\r\n        if (this._searchTerm) {\r\n            filteredDevices = filteredDevices.filter(device =>\r\n                device.name.toLowerCase().includes(this._searchTerm.toLowerCase())\r\n            );\r\n        }\r\n\r\n        return filteredDevices;\r\n    }\r\n\r\n    get selectedType() {\r\n        return this._selectedType\r\n    }\r\n    get selectedBrand() {\r\n        return this._selectedBrand\r\n    }\r\n\r\n    get page() {\r\n        return this._page\r\n    }\r\n    get totalCount() {\r\n        return this._totalCount\r\n    }\r\n    get limit() {\r\n        return this._limit\r\n    }\r\n\r\n    get searchTerm() {\r\n        return this._searchTerm;\r\n    }\r\n\r\n}\r\n\r\nexport default DeviceStore;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}