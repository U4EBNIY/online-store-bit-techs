{"ast":null,"code":"import axios from 'axios';\nconst $host = axios.create({\n  baseURL: process.env.REACT_APP_API_URL\n});\nconst $authHost = axios.create({\n  baseURL: process.env.REACT_APP_API_URL\n});\nconst authInterceptor = config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.authorization = `Bearer ${token}`;\n  }\n  return config;\n};\n\n// Добавляем интерцептор для повторного запроса при 401\nconst responseInterceptor = error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.reload(); // или перенаправление на /login\n  }\n  return Promise.reject(error);\n};\n$authHost.interceptors.request.use(authInterceptor);\n$authHost.interceptors.response.use(response => response, responseInterceptor);\nexport { $host, $authHost };","map":{"version":3,"names":["axios","$host","create","baseURL","process","env","REACT_APP_API_URL","$authHost","authInterceptor","config","token","localStorage","getItem","headers","authorization","responseInterceptor","error","_error$response","response","status","removeItem","window","location","reload","Promise","reject","interceptors","request","use"],"sources":["C:/ShareLib/Курсач/online-store-bit-tech/client/src/http/index.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst $host = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL\r\n});\r\n\r\nconst $authHost = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL\r\n});\r\n\r\nconst authInterceptor = config => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n        config.headers.authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n};\r\n\r\n// Добавляем интерцептор для повторного запроса при 401\r\nconst responseInterceptor = error => {\r\n    if (error.response?.status === 401) {\r\n        localStorage.removeItem('token');\r\n        window.location.reload(); // или перенаправление на /login\r\n    }\r\n    return Promise.reject(error);\r\n};\r\n\r\n$authHost.interceptors.request.use(authInterceptor);\r\n$authHost.interceptors.response.use(response => response, responseInterceptor);\r\n\r\nexport { $host, $authHost };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC;AACzB,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAGP,KAAK,CAACE,MAAM,CAAC;EAC3BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC;AACzB,CAAC,CAAC;AAEF,MAAME,eAAe,GAAGC,MAAM,IAAI;EAC9B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC;;AAED;AACA,MAAMM,mBAAmB,GAAGC,KAAK,IAAI;EAAA,IAAAC,eAAA;EACjC,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACE,QAAQ,cAAAD,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,EAAE;IAChCR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;EAC9B;EACA,OAAOC,OAAO,CAACC,MAAM,CAACT,KAAK,CAAC;AAChC,CAAC;AAEDT,SAAS,CAACmB,YAAY,CAACC,OAAO,CAACC,GAAG,CAACpB,eAAe,CAAC;AACnDD,SAAS,CAACmB,YAAY,CAACR,QAAQ,CAACU,GAAG,CAACV,QAAQ,IAAIA,QAAQ,EAAEH,mBAAmB,CAAC;AAE9E,SAASd,KAAK,EAAEM,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}